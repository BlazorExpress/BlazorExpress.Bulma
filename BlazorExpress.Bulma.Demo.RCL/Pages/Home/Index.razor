@attribute [Route(pageUrl)]

<PageMetaTags PageUrl="@pageUrl" Title="@metaTitle" Description="@metaDescription" ImageUrl="@imageUrl" />

<div class="has-text-centered mb-6">
    <div class="mb-6">
        <Tag Color="TagColor.Warning" Size="TagSize.Medium">New in @version</Tag>
        <span class="is-size-6 text-muted">@releaseShortDescription</span>
    </div>
    <div style="justify-items: center;">
        <Image Src="@StringConstants.StaticAssets_Icons_Logo_png"
               Dimension="ImageDimension.Is128x128"
               alt="BlazorExpress Logo" />
    </div>
</div>
<Hero Class="has-text-centered mb-6">
    <HeroTitle class="mb-4">
        @((MarkupString)pageTitle)
    </HeroTitle>
    <HeroSubTitle Class="has-text-dark">
        @((MarkupString)pageDescription)
    </HeroSubTitle>
</Hero>
<div class="has-text-centered mb-4">
    <a href="https://www.nuget.org/packages/BlazorExpress.Bulma/"><img alt="Nuget" src="https://img.shields.io/nuget/v/Blazor.Bootstrap"></a>
    <span class="px-1"></span>
    <a href="https://www.nuget.org/packages/BlazorExpress.Bulma/"><img alt="Nuget" src="https://img.shields.io/nuget/dt/Blazor.Bootstrap"></a>
</div>

<IndexComponentLinks Title="All Components" Category="@PageLinkCategory.All" />

<IndexComponentLinks Title="Form Components" Category="@PageLinkCategory.Form" />

<IndexComponentLinks Title="Icon Components" Category="@PageLinkCategory.Icons" />

<Message Class="mb-4" Color="MessageColor.Success">
    <MessageBody>
        <div class="is-size-5 has-text-weight-semibold mb-2"><BootstrapIcon Name="BootstrapIconName.Lightbulb" /> DO YOU KNOW?</div>
        <div>
            This demo website is built using the <strong><a href="@nugetUrl" target="_blank">BlazorExpress Bulma</a></strong> library and published on the Azure Web App.
            See our source code on <a href="@githubUrl" target="_blank">GitHub</a>.
        </div>
    </MessageBody>
</Message>

@code {
    private const string pageUrl = "/";
    private const string pageTitle = "BlazorExpress Bulma Components <br /> Fast, Free & Open Source";
    private const string pageDescription = "Get started with BlazorExpress Bulma. Build high-performance, responsive Blazor apps quickly with our free, open-source UI library. Developers, build in minutes!";
    private const string metaTitle = "BlazorExpress Bulma Components: Fast, Free & Open Source";
    private const string metaDescription = "Get started with BlazorExpress Bulma. Build high-performance, responsive Blazor apps quickly with our free, open-source UI library. Developers, build in minutes!";
    private const string imageUrl = "https://i.imgur.com/FGgEMp6.jpg"; // TODO: update

    private string version = default!;
    private string releaseShortDescription = default!;
    private string githubUrl = default!;
    private string nugetUrl = default!;

    private HashSet<PageLink> allComponentsLinks = null!;
    private HashSet<PageLink> formComponentsLinks = null!;
    private HashSet<PageLink> iconComponentsLinks = null!;

    [Inject] public IConfiguration Configuration { get; set; } = default!;

    protected override void OnInitialized()
    {
        version = $"v{Configuration["version"]}"; // example: v0.6.1
        releaseShortDescription = Configuration["release:short_description"]!;
        githubUrl = $"{Configuration["urls:github"]}";
        nugetUrl = $"{Configuration["urls:nuget"]}";

        allComponentsLinks = PageLinkUtil.GetDemosLinks().Where(link => link.IsActive && link.Text != "Introduction").ToHashSet();
        formComponentsLinks = PageLinkUtil.GetDemosLinks().Where(link => link.IsActive && link.Categories.Contains(PageLinkCategory.Form)).ToHashSet();
        iconComponentsLinks = PageLinkUtil.GetDemosLinks().Where(link => link.IsActive && link.Categories.Contains(PageLinkCategory.Icons)).ToHashSet();
    }
}
