@attribute [Route(pageUrl)]
@layout DemosMainLayout

<PageMetaTags PageUrl="@pageUrl" Title="@metaTitle" Description="@metaDescription" ImageUrl="@imageUrl" />

<PageHero Title="@pageTitle">
    <SubTitleTemplate>
        @((MarkupString)pageDescription)
    </SubTitleTemplate>
</PageHero>

<DocsLink Href="@DemoRouteConstants.Docs_Box_Documentation" />

<Section Class="p-0" Size="HeadingSize.H3" Name="How it works" PageUrl="@pageUrl" Link="how-it-works">
    <Block>
        The <strong>Box</strong> component provides a simple, clean container with a white background, padding, and a subtle box shadow. It is ideal for grouping content, forms, or media in a visually distinct section.
        <br /><br />
        <strong>How to use:</strong>
        <div class="content mb-2">
            <ol>
                <li>Wrap your content inside the <code>&lt;Box&gt;</code> component to give it a styled container.</li>
                <li>You can place any valid markup inside <code>&lt;Box&gt;</code>, such as text, forms, or custom layouts.</li>
                <li>Use multiple <code>&lt;Box&gt;</code> components on a page to organize different sections or highlight important information.</li>
            </ol>
        </div>
        The following demo shows a basic usage of the <code>Box</code> component with simple text content.
    </Block>
    <Demo Class="mb-3" Type="typeof(Box_Demo_01_How_it_works_A)" Tabs="true" />
    <Block>
        The <strong>Box</strong> component can be used to neatly group interactive elements, such as forms, making them stand out from the rest of the page.
        <br /><br />
        <strong>How to use:</strong>
        <div class="content mb-2">
            <ol>
                <li>Place your form or input fields inside the <code>&lt;Box&gt;</code> component.</li>
                <li>This approach helps visually separate forms from other content, improving clarity and user experience.</li>
            </ol>
        </div>
        The demo below illustrates how to use the <code>Box</code> component to contain a sign-in form.
    </Block>
    <Demo Class="mb-3" Type="typeof(Box_Demo_01_How_it_works_B)" Tabs="true" />
    <Block>
        The <strong>Box</strong> component is also suitable for wrapping more complex layouts, such as media objects or card-like content, providing a consistent and attractive appearance.
        <br /><br />
        <strong>How to use:</strong>
        <div class="content mb-2">
            <ol>
                <li>Embed any layout, such as media, images, or interactive elements, inside the <code>&lt;Box&gt;</code> component.</li>
                <li>This ensures your content is visually grouped and stands out from the background.</li>
            </ol>
        </div>
        The following demo demonstrates the <code>Box</code> component containing a media object with an image and actions.
    </Block>
    <Demo Type="typeof(Box_Demo_01_How_it_works_C)" Tabs="true" />
</Section>

@code {
    private const string componentName = nameof(Box);
    private const string pageUrl = DemoRouteConstants.Demos_Box_Documentation;
    private const string pageTitle = componentName;
    private const string pageDescription = $"The <code>{componentName}</code> component is a simple container with a white background, some padding, and a box shadow.";
    private const string metaTitle = $"Blazor {componentName} Component";
    private const string metaDescription = $"The {componentName} component is a simple container with a white background, some padding, and a box shadow.";
    private const string imageUrl = DemoScreenshotSrcConstants.Box;
}
